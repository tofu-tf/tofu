"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8493],{1122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var r=n(8168),a=n(8587),i=(n(6540),n(5680)),o=["components"],l={id:"kernelcatsmtlinterop",title:"Cats MTL interop"},s=void 0,p={unversionedId:"kernelcatsmtlinterop",id:"kernelcatsmtlinterop",title:"Cats MTL interop",description:"Core: Interop with cats MTL library",source:"@site/../docs/cats-mtl-interop.md",sourceDirName:".",slug:"/kernelcatsmtlinterop",permalink:"/tofu/docs/kernelcatsmtlinterop",draft:!1,tags:[],version:"current",lastUpdatedBy:"Matt Kohl",lastUpdatedAt:1666373101,formattedLastUpdatedAt:"Oct 21, 2022",frontMatter:{id:"kernelcatsmtlinterop",title:"Cats MTL interop"},sidebar:"docs",previous:{title:"WithContext",permalink:"/tofu/docs/withcontext"},next:{title:"Agent",permalink:"/tofu/docs/agent"}},c={},m=[{value:"Core: Interop with cats MTL library",id:"core-interop-with-cats-mtl-library",level:2},{value:"Install",id:"install",level:3},{value:"Conversions",id:"conversions",level:3}],u={toc:m},y="wrapper";function d(e){var t=e.components,n=(0,a.A)(e,o);return(0,i.yg)(y,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"core-interop-with-cats-mtl-library"},"Core: Interop with cats MTL library"),(0,i.yg)("p",null,"Obviously, this is a module inside ",(0,i.yg)("inlineCode",{parentName:"p"},"TOFU")," for interop between some ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/typelevel/cats-mtl"},"Cats MTL")," typeclasses and ",(0,i.yg)("inlineCode",{parentName:"p"},"tofu-kernel")),(0,i.yg)("p",null,"For example, you have an external code using ",(0,i.yg)("inlineCode",{parentName:"p"},"Cats MTL")," like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"import cats.mtl.Ask\nimport cats.Functor\nimport cats.syntax.functor._\n\ndef externalProgram[F[_]: Functor](m: Int, f: String => String)(implicit A: Ask[F, String]): F[String] = {\nfor {\n  ctx <- A.ask\n  res = f(ctx) \n} yield res * m\n}\n")),(0,i.yg)("p",null,"and your code using ",(0,i.yg)("inlineCode",{parentName:"p"},"TOFU")," where you have different context typeclasses:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"import cats.effect.Sync\nimport cats.syntax.functor._\nimport cats.syntax.flatMap._\nimport tofu.WithContext\n                                              \nimport scala.util.Random\n\ndef yourProgram[F[_]: Sync: WithContext[*[_], String]]: F[String] = {\nfor {    \n  int <- Sync[F].delay(scala.util.Random.nextInt())\n  result <- externalProgram[F](int, identity)\n} yield result\n}\n")),(0,i.yg)("p",null,"so you have a problem - how we can easily use ",(0,i.yg)("inlineCode",{parentName:"p"},"extermalProblem"),"?\nUsually programmers write your own implicit conversions, but ",(0,i.yg)("inlineCode",{parentName:"p"},"TOFU")," could provide this instance for you!"),(0,i.yg)("h3",{id:"install"},"Install"),(0,i.yg)("p",null,"For installation interop, add dependency into your project:\n",(0,i.yg)("inlineCode",{parentName:"p"},'"tf.tofu" %% "tofu-kernel-cats-mtl" % tofu-version')),(0,i.yg)("p",null,"This library provides three modules with conversions:\nimport it into your code files:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"From ",(0,i.yg)("inlineCode",{parentName:"li"},"Cats MTL")," instances to ",(0,i.yg)("inlineCode",{parentName:"li"},"TOFU")," instances: ",(0,i.yg)("inlineCode",{parentName:"li"},"import tofu.kernel.interop.catsmtl.tofuimplicits._")),(0,i.yg)("li",{parentName:"ul"},"From ",(0,i.yg)("inlineCode",{parentName:"li"},"TOFU")," instances to ",(0,i.yg)("inlineCode",{parentName:"li"},"Cats MTL")," instances: ",(0,i.yg)("inlineCode",{parentName:"li"},"import tofu.kernel.interop.catsmtl.mtlimplicits._")),(0,i.yg)("li",{parentName:"ul"},"Explicit conversions between ",(0,i.yg)("inlineCode",{parentName:"li"},"Cats MTL")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"TOFU")," instances: ",(0,i.yg)("inlineCode",{parentName:"li"},"import tofu.kernel.interop.catsmtl.instances._"))),(0,i.yg)("h3",{id:"conversions"},"Conversions"),(0,i.yg)("p",null,"In this module we provide some conversions to ",(0,i.yg)("inlineCode",{parentName:"p"},"Cats MTL")," typeclasses from ",(0,i.yg)("inlineCode",{parentName:"p"},"TOFU")," typeclasses:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", C] (WithContext","[F, C]",", Applicative","[F]",") => Ask","[F, C]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", C] (WithLocal","[F, C]",", Applicative","[F]",", ) => Local","[F, C]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", E] (Raise","[F, E]",", Functor","[F]",") => Raise","[F, E]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", E] (Errors","[F, E]",", Applicative","[F]",") => Handle","[F, E]")),(0,i.yg)("p",null,"Also, we provide conversions to ",(0,i.yg)("inlineCode",{parentName:"p"},"TOFU")," typeclasses from ",(0,i.yg)("inlineCode",{parentName:"p"},"Cats MTL")," typeclasses:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", C] (Ask","[F, C]",") => WithContext","[F, C]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", C] (Local","[F, C]",") => WithLocal","[F, C]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", E] (Raise","[F, E]",") => Raise","[F, E]"),(0,i.yg)("li",{parentName:"ul"},"[F","[_]",", E] (Handle","[F, E]",") => Errors","[F, E]")))}d.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){a(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef(function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),y=a,d=m["".concat(s,".").concat(y)]||m[y]||u[y]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))});function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);