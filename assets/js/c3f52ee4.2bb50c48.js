"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[70],{262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>g,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(8168),o=n(8587),a=(n(6540),n(5680)),i=["components"],l={id:"tofu.logging.recipes.auto",title:"Logging auto derivation"},g=void 0,p={unversionedId:"tofu.logging.recipes.auto",id:"tofu.logging.recipes.auto",title:"Logging auto derivation",description:"The problem",source:"@site/../docs/tofu.logging.recipes.auto.md",sourceDirName:".",slug:"/tofu.logging.recipes.auto",permalink:"/tofu/docs/tofu.logging.recipes.auto",draft:!1,tags:[],version:"current",lastUpdatedBy:"Anton Kudryavtsev",lastUpdatedAt:1733993116,formattedLastUpdatedAt:"Dec 12, 2024",frontMatter:{id:"tofu.logging.recipes.auto",title:"Logging auto derivation"},sidebar:"docs",previous:{title:"Contextual Logging",permalink:"/tofu/docs/tofu.logging.recipes.context"},next:{title:"ZIO Logging",permalink:"/tofu/docs/tofu.logging.recipes.zio"}},u={},s=[{value:"The problem",id:"the-problem",level:2},{value:"Autogenerated logging",id:"autogenerated-logging",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Example",id:"example",level:2}],c={toc:s},d="wrapper";function m(e){var t=e.components,n=(0,o.A)(e,i);return(0,a.yg)(d,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"the-problem"},"The problem"),(0,a.yg)("p",null,"Often you see that in well modularized apps log messages are quite the same:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'def method(args: Args) = for {\n  _ <- info"Started method with $args"\n  result <- foo(bar(args))\n  _ <- info"Ended method with $result"\n} yield result\n')),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"tofu.logging")," allows to automatically generate those lines about entering and exiting the method."),(0,a.yg)("h2",{id:"autogenerated-logging"},"Autogenerated logging"),(0,a.yg)("p",null,"You can automatically generate log messages stating when the method of some service has been entered and left."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},"import tofu.higherKind.derived.representableK\nimport derevo.derive\nimport tofu.logging.derivation._\nimport tofu.logging.Logging\n\n@derive(representableK, loggingMid)\ntrait MyService[F[_]] {\n  def makeThis: F[Unit]\n\n  def makeThat(arg1: Int, arg2: String): F[Long]\n}\n\nobject MyService extends Logging.Companion[MyService] {\n\n  def make[F[_] : Logging.Make : Monad]: MyService[F] = {\n    val core = new Impl[F]\n    core.attachLogs\n  }\n\n  class Impl[F[_] : Monad] extends MyService[F] {\n    //implementation\n  }\n}\n\n")),(0,a.yg)("p",null,"There is also an alternative \u2014 loggingMidErr which also logs any error happened during method execution."),(0,a.yg)("h2",{id:"how-it-works"},"How it works"),(0,a.yg)("p",null,"The idea is based on the ",(0,a.yg)("a",{parentName:"p",href:"/tofu/docs/mid"},"Mid concept"),". For every method ",(0,a.yg)("inlineCode",{parentName:"p"},"def foo(bar: Bar): F[Baz] = impl")," it generates\nit's logging compartment, looking close to that:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'def foo(bar: Bar): F[Baz] = debug"Entering foo with $bar" *> impl <* debug"Exiting foo with $baz"\n')),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"Check out the example ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/tofu-tf/tofu/tree/master/examples/ce2/src/main/scala-2/tofu/example/logging/auto"},"here"),"."))}m.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var g=r.createContext({}),p=function(e){var t=r.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(g.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef(function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,g=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=o,m=s["".concat(g,".").concat(d)]||s[d]||c[d]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))});function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var g in t)hasOwnProperty.call(t,g)&&(l[g]=t[g]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);