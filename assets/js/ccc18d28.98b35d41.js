"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2887],{4132:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var o=t(8168),a=t(8587),r=(t(6540),t(5680)),i=["components"],s={id:"console",title:"Console"},l=void 0,p={unversionedId:"console",id:"console",title:"Console",description:"Installation",source:"@site/../docs/console.md",sourceDirName:".",slug:"/console",permalink:"/tofu/docs/console",draft:!1,tags:[],version:"current",lastUpdatedBy:"Rat King",lastUpdatedAt:1619684248,formattedLastUpdatedAt:"Apr 29, 2021",frontMatter:{id:"console",title:"Console"},sidebar:"docs",previous:{title:"Config",permalink:"/tofu/docs/config"},next:{title:"Memo",permalink:"/tofu/docs/memo"}},u={},c=[{value:"Installation",id:"installation",level:2},{value:"What if you need to keep things simple?",id:"what-if-you-need-to-keep-things-simple",level:2},{value:"Console",id:"console",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Show",id:"show",level:4},{value:"Puts",id:"puts",level:4}],d={toc:c},y="wrapper";function g(e){var n=e.components,t=(0,a.A)(e,i);return(0,r.yg)(y,(0,o.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},'"tf.tofu" %% "tofu" % tofu-version'),(0,r.yg)("br",{parentName:"p"}),"\n","or as a standalone dependency\n",(0,r.yg)("inlineCode",{parentName:"p"},'"tf.tofu" %% "tofu-core" % tofu-version'),"  "),(0,r.yg)("h2",{id:"what-if-you-need-to-keep-things-simple"},"What if you need to keep things simple?"),(0,r.yg)("p",null,"Let's say you're writing something simple and you need some of that good ol' console IO. Of course you can use plain ",(0,r.yg)("inlineCode",{parentName:"p"},"println")," but we are nice and pure here. It is way better to use ",(0,r.yg)("inlineCode",{parentName:"p"},"tofu.Console")," in such case."),(0,r.yg)("h3",{id:"console"},"Console"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"Console[F]")," does three things:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"lets you read from standard input in ",(0,r.yg)("inlineCode",{parentName:"li"},"F")),(0,r.yg)("li",{parentName:"ul"},"lets you write to standard output in ",(0,r.yg)("inlineCode",{parentName:"li"},"F")),(0,r.yg)("li",{parentName:"ul"},"lets you write to error output in ",(0,r.yg)("inlineCode",{parentName:"li"},"F"))),(0,r.yg)("p",null,"Let's demonstrate it with simple example.\nSuppose we are writing a subset of unix ",(0,r.yg)("inlineCode",{parentName:"p"},"cat")," program that can echo its input to output."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"import cats.effect.{ExitCode, IO, IOApp}\nimport cats.FlatMap\nimport tofu.common.Console\nimport tofu.syntax.monadic._ //for flatMap\n\n\nobject catStraight extends IOApp {\n  override def run(args: List[String]): IO[ExitCode] = \n       catProgramStep[IO].foreverM\n\n  def catProgramStep[F[_] : FlatMap : Console]: F[Unit] = for {\n    input <- Console[F].readStrLn \n    _ <- Console[F].putStrLn(input) // or putStr if you don't like newlines\n  } yield ()\n}\n")),(0,r.yg)("p",null,"Where does the instance of ",(0,r.yg)("inlineCode",{parentName:"p"},"Console[IO]")," comes from?\nThe answer is that for any type ",(0,r.yg)("inlineCode",{parentName:"p"},"F")," that has ",(0,r.yg)("inlineCode",{parentName:"p"},"Sync[F]")," instance of console comes for free by using standard scala console IO."),(0,r.yg)("h3",{id:"syntax"},"Syntax"),(0,r.yg)("p",null,"It's all cool but writing ",(0,r.yg)("inlineCode",{parentName:"p"},"Console[F]")," isn't cool. There is 'tofu.syntax.console' for a fancy functions to work with it.\nLet's make our cat program a little nicer by adding one import and removing duplicates."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'import tofu.syntax.console._ //this one gets you all the goodies\n\nobject catWithSyntax extends IOApp {\n  override def run(args: List[String]): IO[ExitCode] =\n    catProgramStep[IO].foreverM\n\n  def catProgramStep[F[_]: FlatMap: Console]: F[Unit] = for {\n    input <- readStrLn\n    _ <- if (input != "dog")\n          putStrLn(input)\n        else\n          putErrLn("Do not scare the cat!")\n  } yield ()\n}\n')),(0,r.yg)("p",null,"So when ran it works like that:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cat\n>cat\nkitten\n>kitten\ndog\n>Do not scare the cat! //written in red because of 'putErrLn'\n")),(0,r.yg)("h4",{id:"show"},"Show"),(0,r.yg)("p",null,"There are integrations with ",(0,r.yg)("inlineCode",{parentName:"p"},"cats.Show")," typeclass.\nLet's say we have some case class and a custom ",(0,r.yg)("inlineCode",{parentName:"p"},"Show")," instance for it:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'import cats.Show\n\ncase class Person(name: String)\nimplicit val personShow: Show[Person] = Show.show[Person](p => s"this person has name ${p.name}")\n')),(0,r.yg)("p",null,"You can use two methods to put a person to console"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'val cat: Person = Person("Cat")\n\nputToStringLn[IO](cat).unsafeRunSync() //uses .toString \nputShowLn[IO, Person](cat).unsafeRunSync() //uses Show from scope\n')),(0,r.yg)("h4",{id:"puts"},"Puts"),(0,r.yg)("p",null,"Also, it is possible to print a interpolated string in a nice way using ",(0,r.yg)("inlineCode",{parentName:"p"},'puts"..."'),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'def putCat[F[_]: Console]: F[Unit] = puts"$cat, not a Person"\nputCat[IO].unsafeRunSync()\n')),(0,r.yg)("p",null,"As you can see it uses ",(0,r.yg)("inlineCode",{parentName:"p"},"Show")," inside so you'd want to have instances for values inside ",(0,r.yg)("inlineCode",{parentName:"p"},"puts"),"-string.\nThe error message when you do not have ",(0,r.yg)("inlineCode",{parentName:"p"},"Show")," instance in scope look like that:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sbtshell"},'[error] ...: type mismatch\n[error]  found   : tofu.cat.Person\n[error]  required: cats.Show.Shown\n[error]   def putCat[F[_]: Console] = puts"$cat that is not a Person"\n[error]                                     ^\n')))}g.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var o=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach(function(n){a(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},y=o.forwardRef(function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),y=a,g=c["".concat(l,".").concat(y)]||c[y]||d[y]||r;return t?o.createElement(g,i(i({ref:n},u),{},{components:t})):o.createElement(g,i({ref:n},u))});function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}y.displayName="MDXCreateElement"}}]);