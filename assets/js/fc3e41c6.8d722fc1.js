"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7124],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>f});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var g=r.createContext({}),p=function(e){var t=r.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(g.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef(function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,g=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),u=o,f=s["".concat(g,".").concat(u)]||s[u]||m[u]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))});function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var g in t)hasOwnProperty.call(t,g)&&(l[g]=t[g]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6895:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>g,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(8168),o=n(8587),i=(n(6540),n(5680)),a=["components"],l={id:"tofu.logging.recipes.simple",title:"The simplest form"},g=void 0,p={unversionedId:"tofu.logging.recipes.simple",id:"tofu.logging.recipes.simple",title:"The simplest form",description:"Simple logging",source:"@site/../docs/tofu.logging.recipes.simple.md",sourceDirName:".",slug:"/tofu.logging.recipes.simple",permalink:"/tofu/docs/tofu.logging.recipes.simple",draft:!1,tags:[],version:"current",lastUpdatedBy:"Anton Kudryavtsev",lastUpdatedAt:1733993116,formattedLastUpdatedAt:"Dec 12, 2024",frontMatter:{id:"tofu.logging.recipes.simple",title:"The simplest form"},sidebar:"docs",previous:{title:"Recipe list",permalink:"/tofu/docs/tofu.logging.recipes"},next:{title:"Logs for a service",permalink:"/tofu/docs/tofu.logging.recipes.service"}},c={},s=[{value:"Simple logging",id:"simple-logging",level:2},{value:"Example",id:"example",level:2}],m={toc:s},u="wrapper";function f(e){var t=e.components,n=(0,o.A)(e,a);return(0,i.yg)(u,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"simple-logging"},"Simple logging"),(0,i.yg)("p",null,"All you need to do to start using logging in its simplest (and kinda boilerplate-y) form is the following:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"add Logging.Make as parameter to your service \u2014 that will describe the capability to create ",(0,i.yg)("inlineCode",{parentName:"li"},"Logging"),"s;"),(0,i.yg)("li",{parentName:"ul"},"create logging instance with method ",(0,i.yg)("inlineCode",{parentName:"li"},"Logging.Make[F].forService"),".")),(0,i.yg)("p",null,"That's it!"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},'class MyService[F[_] : Monad : Logging.Make](someDependency: DependencyService) {\n\n  private implicit val logging: Logging[F] = Logging.Make[F].forService[MyService[F]]\n\n  def makeThis: F[Unit] = someDependency.foo(30) >> info"Something"\n\n  def makeThat: F[Unit] = someDependency.foo(30).flatTap(result => warn"Some another thing $result")\n}\n\n')),(0,i.yg)("p",null,"At the app creation point you'll need to create the instance of Logging.Make by the method ",(0,i.yg)("inlineCode",{parentName:"p"},"Logging.Make.plain"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"def run: IO[ExitCode] = {\n  implicit val makeLogging: Logging.Make[IO] = Logging.Make.plain[IO]\n\n  val myService = new MyService[IO](???)\n\n  ??? //the rest of the app\n}\n")),(0,i.yg)("p",null,"And if you have context inside your ",(0,i.yg)("inlineCode",{parentName:"p"},"F")," you can use method ",(0,i.yg)("inlineCode",{parentName:"p"},"Logging.Make.contextual[F, Ctx]"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"def run: IO[ExitCode] = {\n  implicit val makeLogging: Logging.Make[ReaderT[IO, SomeContext, *]] =\n    Logging.Make.contextual[ReaderT[IO, SomeContext, *], SomeContext]\n\n  val myService = new MyService[ReaderT[IO, SomeContext, *]](???)\n\n  ??? //the rest of the app\n}\n")),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)("p",null,"Check out the example ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/tofu-tf/tofu/blob/master/examples/ce2/src/main/scala-2/tofu/example/logging/simple"},"here"),"."))}f.isMDXComponent=!0}}]);