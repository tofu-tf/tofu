"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7124],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=r.createContext({}),p=function(e){var n=r.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(g.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,g=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(t),u=o,f=s["".concat(g,".").concat(u)]||s[u]||m[u]||i;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var g in n)hasOwnProperty.call(n,g)&&(l[g]=n[g]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6895:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>g,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=t(8168),o=t(8587),i=(t(6540),t(5680)),a=["components"],l={id:"tofu.logging.recipes.simple",title:"The simplest form"},g=void 0,p={unversionedId:"tofu.logging.recipes.simple",id:"tofu.logging.recipes.simple",title:"The simplest form",description:"Simple logging",source:"@site/../docs/tofu.logging.recipes.simple.md",sourceDirName:".",slug:"/tofu.logging.recipes.simple",permalink:"/tofu/docs/tofu.logging.recipes.simple",draft:!1,tags:[],version:"current",lastUpdatedBy:"Vadim Chelyshov",lastUpdatedAt:1750148990,formattedLastUpdatedAt:"Jun 17, 2025",frontMatter:{id:"tofu.logging.recipes.simple",title:"The simplest form"},sidebar:"docs",previous:{title:"Recipe list",permalink:"/tofu/docs/tofu.logging.recipes"},next:{title:"Logs for a service",permalink:"/tofu/docs/tofu.logging.recipes.service"}},c={},s=[{value:"Simple logging",id:"simple-logging",level:2},{value:"Example",id:"example",level:2}],m={toc:s},u="wrapper";function f(e){var n=e.components,t=(0,o.A)(e,a);return(0,i.yg)(u,(0,r.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"simple-logging"},"Simple logging"),(0,i.yg)("p",null,"All you need to do to start using logging in its simplest (and kinda boilerplate-y) form is the following:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"add Logging.Make as parameter to your service \u2014 that will describe the capability to create ",(0,i.yg)("inlineCode",{parentName:"li"},"Logging"),"s;"),(0,i.yg)("li",{parentName:"ul"},"create logging instance with method ",(0,i.yg)("inlineCode",{parentName:"li"},"Logging.Make[F].forService"),".")),(0,i.yg)("p",null,"That's it!"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},'class MyService[F[_] : Monad : Logging.Make](someDependency: DependencyService) {\n\n  private implicit val logging: Logging[F] = Logging.Make[F].forService[MyService[F]]\n\n  def makeThis: F[Unit] = someDependency.foo(30) >> info"Something"\n\n  def makeThat: F[Unit] = someDependency.foo(30).flatTap(result => warn"Some another thing $result")\n}\n\n')),(0,i.yg)("p",null,"At the app creation point you'll need to create the instance of Logging.Make by the method ",(0,i.yg)("inlineCode",{parentName:"p"},"Logging.Make.plain"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"def run: IO[ExitCode] = {\n  implicit val makeLogging: Logging.Make[IO] = Logging.Make.plain[IO]\n\n  val myService = new MyService[IO](???)\n\n  ??? //the rest of the app\n}\n")),(0,i.yg)("p",null,"And if you have context inside your ",(0,i.yg)("inlineCode",{parentName:"p"},"F")," you can use method ",(0,i.yg)("inlineCode",{parentName:"p"},"Logging.Make.contextual[F, Ctx]"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"def run: IO[ExitCode] = {\n  implicit val makeLogging: Logging.Make[ReaderT[IO, SomeContext, *]] =\n    Logging.Make.contextual[ReaderT[IO, SomeContext, *], SomeContext]\n\n  val myService = new MyService[ReaderT[IO, SomeContext, *]](???)\n\n  ??? //the rest of the app\n}\n")),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)("p",null,"Check out the example ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/tofu-tf/tofu/blob/master/examples/ce2/src/main/scala-2/tofu/example/logging/simple"},"here"),"."))}f.isMDXComponent=!0}}]);